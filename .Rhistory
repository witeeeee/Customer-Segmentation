data$Family_Size[is.na(data$Family_Size)]<-mean(data$Family_Size,na.rm=TRUE)
boxplot(data$Age, horizontal = TRUE,col = 'Purple',main="Age")
boxplot(data$Work_Experience, horizontal = TRUE,col = 'Orange',main="Work Ex")
boxplot(data$Family_Size, horizontal = TRUE,col = 'Blue',main="Family Size")
library(ggplot2)
ggplot(data) + geom_bar(aes(x = Gender))
ggplot(data) + geom_bar(aes(x = Ever_Married))
ggplot(data) + geom_bar(aes(x = Graduated))
ggplot(data) + geom_bar(aes(x = Profession))
ggplot(data) + geom_bar(aes(x = Spending_Score))
library(fastDummies)
cluster_data<-dummy_cols(data)
cat <- c("ID","Gender","Ever_Married","Graduated","Profession","Spending_Score")
cluster_data<-cluster_data[ , !(names(cluster_data) %in% cat)]
head(cluster_data)
library(cluster)
library(factoextra)
fviz_nbclust(cluster_data, kmeans, method = "wss")
set.seed(240) # Setting seed
kmeans_1 <- kmeans(cluster_data, centers = 3, nstart = 20)
table(kmeans_1$cluster)
data$cluster<-kmeans_1$cluster
head(data)
set.seed(240)
d <- dist(cluster_data, method = "euclidian")
hclus_1 <- hclust(d, method = "complete")
#fviz_dend(hclus_1, k = 3, cex = 0.6)
hclust_fit <- cutree(hclus_1, k = 3)
table(hclust_fit)
data$hcluster<-hclust_fit
head(data)
library(ppclust)
fcm_fit <- fcm(cluster_data, centers= 3)
table(fcm_fit$cluster)
data$fcmcluster <- fcm_fit$cluster
head(data)
cluster_data$cluster <- kmeans_1$cluster
cluster_data$hcluster <- hclust_fit
cluster_data$fcmcluster <- fcm_fit$cluster
y_kmeans <- kmeans_1$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(cluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
y_hclust <- hclust_fit
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(hcluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
head(data)
library(caTools)
library(party)
split <- sample.split(cluster_data, SplitRatio = 0.8)
train <- cluster_data[split, ]
test <- cluster_data[!split, ]
dim(train)
dim(test)
library(class)
library(e1071)
scaled_train <- scale(train[, 1:21])
scaled_test <- scale(test[, 1:21])
y_pred <- knn(train = scaled_train, test = scaled_test, cl = train$hcluster, k = 1)
confusion_matrix <- table(test$hcluster, y_pred)
confusion_matrix
classerr <- mean(y_pred != test$hcluster)
paste("Accuracy", 1-classerr)
nbInput <- as.data.frame(scaled_train)
nbInput$y <- train$hcluster
nbModel <- naiveBayes(y~., data = nbInput)
predictNb <- predict(nbModel, as.data.frame(scaled_test))
table(predictNb, test$hcluster)
classerr <- mean(predictNb != test$hcluster)
paste("Accuracy: ", 1-classerr)
dtModel <- ctree(y~., data = nbInput)
predictdt <- predict(dtModel, as.data.frame(scaled_test))
table(predictdt, test$hcluster)
clusplot(data[, c("Family_Size", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
y_kmeans <- kmeans_1$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
y_hclust <- fcm_fit$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(fcmcluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
head(data)
pam_fit <- pam(cluster_data, k = 3)
table(pam_fit)
table(pam_fit$clustering)
data$pamcluster <- pam_fit$cluster
head(data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data <- read.csv("customer.csv")
head(data)
library(Hmisc)
describe(data)
drops <- c("Var_1")
data <- data[ ,!(names(data) %in% drops)]
head(data)
#handling blank values and NA values:
data[data==""] <- NA
lapply(data, function(x) {length(which(is.na(x)))})
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
data$Ever_Married[is.na(data$Ever_Married)] <- getmode(data$Ever_Married)
data$Graduated[is.na(data$Graduated)] <- getmode(data$Graduated)
data$Profession[is.na(data$Profession)] <- getmode(data$Profession)
data$Work_Experience[is.na(data$Work_Experience)] <-mean(data$Work_Experience, na.rm = TRUE)
data$Family_Size[is.na(data$Family_Size)]<-mean(data$Family_Size,na.rm=TRUE)
boxplot(data$Age, horizontal = TRUE,col = 'Purple',main="Age")
boxplot(data$Work_Experience, horizontal = TRUE,col = 'Orange',main="Work Ex")
boxplot(data$Family_Size, horizontal = TRUE,col = 'Blue',main="Family Size")
library(ggplot2)
ggplot(data) + geom_bar(aes(x = Gender))
ggplot(data) + geom_bar(aes(x = Ever_Married))
ggplot(data) + geom_bar(aes(x = Graduated))
ggplot(data) + geom_bar(aes(x = Profession))
ggplot(data) + geom_bar(aes(x = Spending_Score))
library(fastDummies)
cluster_data<-dummy_cols(data)
cat <- c("ID","Gender","Ever_Married","Graduated","Profession","Spending_Score")
cluster_data<-cluster_data[ , !(names(cluster_data) %in% cat)]
head(cluster_data)
library(cluster)
library(factoextra)
fviz_nbclust(cluster_data, kmeans, method = "wss")
set.seed(240) # Setting seed
kmeans_1 <- kmeans(cluster_data, centers = 3, nstart = 20)
table(kmeans_1$cluster)
data$cluster<-kmeans_1$cluster
head(data)
set.seed(240)
d <- dist(cluster_data, method = "euclidian")
hclus_1 <- hclust(d, method = "complete")
#fviz_dend(hclus_1, k = 3, cex = 0.6)
hclust_fit <- cutree(hclus_1, k = 3)
table(hclust_fit)
data$hcluster<-hclust_fit
head(data)
library(ppclust)
fcm_fit <- fcm(cluster_data, centers= 3)
table(fcm_fit$cluster)
data$fcmcluster <- fcm_fit$cluster
head(data)
pam_fit <- pam(cluster_data, k = 3)
table(pam_fit$clustering)
data$pamcluster <- pam_fit$cluster
head(data)
cluster_data$cluster <- kmeans_1$cluster
cluster_data$hcluster <- hclust_fit
cluster_data$fcmcluster <- fcm_fit$cluster
cluster_data$pamcluster <- pam_fit$clustering
y_kmeans <- kmeans_1$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(cluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
y_hclust <- hclust_fit
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(hcluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
y_hclust <- fcm_fit$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(fcmcluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
y_hclust <- pam_fit$cluster
# Visualizing segments in terms of Work experience and Age
clusplot(data[, c("Age", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0, # To remove data labels from the plot
plotchar = TRUE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Age',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Work_Experience")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Work_Experience')
clusplot(data[, c("Family_Size", "Age")],
y_hclust,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 0,
plotchar = FALSE,
span = TRUE,
main = paste("Customer Segments"),
xlab = 'Family_Size',
ylab = 'Age')
data %>% group_by(pamcluster) %>%
summarise(Mean_Age=mean(Age), Work_Experience=mean(Work_Experience),Family_Size=mean(Family_Size),
Graduated=getmode(Graduated),Gender=getmode(Gender),
Married=getmode(Ever_Married),Profession=getmode(Profession),
Spend=getmode(Spending_Score))
head(data)
library(caTools)
library(party)
split <- sample.split(cluster_data, SplitRatio = 0.8)
train <- cluster_data[split, ]
test <- cluster_data[!split, ]
dim(train)
dim(test)
library(class)
library(e1071)
scaled_train <- scale(train[, 1:21])
scaled_test <- scale(test[, 1:21])
y_pred <- knn(train = scaled_train, test = scaled_test, cl = train$hcluster, k = 1)
confusion_matrix <- table(test$hcluster, y_pred)
confusion_matrix
classerr <- mean(y_pred != test$hcluster)
paste("Accuracy", 1-classerr)
nbInput <- as.data.frame(scaled_train)
nbInput$y <- train$hcluster
nbModel <- naiveBayes(y~., data = nbInput)
predictNb <- predict(nbModel, as.data.frame(scaled_test))
table(predictNb, test$hcluster)
classerr <- mean(predictNb != test$hcluster)
paste("Accuracy: ", 1-classerr)
dtModel <- ctree(y~., data = nbInput)
predictdt <- predict(dtModel, as.data.frame(scaled_test))
table(predictdt, test$hcluster)
library(ggplot2)
ggplot(data) + geom_bar(aes(x = Gender, fill = match))
ggplot(data) + geom_bar(aes(x = Gender, fill = Gender))
library(ggplot2)
ggplot(data) + geom_bar(aes(x = Gender, fill = Gender))
ggplot(data) + geom_bar(aes(x = Ever_Married, fill = Ever_Married))
ggplot(data) + geom_bar(aes(x = Graduated, fill = Graduated))
ggplot(data) + geom_bar(aes(x = Profession, fill = Profession))
ggplot(data) + geom_bar(aes(x = Spending_Score, fill = Spending_Score))
fviz_silhouette(kmeans_1)
fviz_silhouette(pam_fit)
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
install.packages("MASS")
install.packages("clValid")
install.packages("clValid")
install.packages("clValid")
